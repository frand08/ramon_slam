ARM GAS  /tmp/ccnj5exI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialise_monitor_handles,"ax",%progbits
  18              		.align	1
  19              		.global	initialise_monitor_handles
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "syscalls.c"
   1:syscalls.c    **** /**
   2:syscalls.c    **** *****************************************************************************
   3:syscalls.c    **** **
   4:syscalls.c    **** **  File        : syscalls.c
   5:syscalls.c    **** **
   6:syscalls.c    **** **  Author        : Auto-generated by System workbench for STM32
   7:syscalls.c    **** **
   8:syscalls.c    **** **  Abstract    : System Workbench Minimal System calls file
   9:syscalls.c    **** **
  10:syscalls.c    **** **                   For more information about which c-functions
  11:syscalls.c    **** **                need which of these lowlevel functions
  12:syscalls.c    **** **                please consult the Newlib libc-manual
  13:syscalls.c    **** **
  14:syscalls.c    **** **  Target      : STMicroelectronics STM32
  15:syscalls.c    **** **
  16:syscalls.c    **** **  Distribution: The file is distributed “as is,” without any warranty
  17:syscalls.c    **** **                of any kind.
  18:syscalls.c    **** **
  19:syscalls.c    **** *****************************************************************************
  20:syscalls.c    **** ** @attention
  21:syscalls.c    **** **
  22:syscalls.c    **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:syscalls.c    **** **
  24:syscalls.c    **** ** Redistribution and use in source and binary forms, with or without modification,
  25:syscalls.c    **** ** are permitted provided that the following conditions are met:
  26:syscalls.c    **** **   1. Redistributions of source code must retain the above copyright notice,
  27:syscalls.c    **** **      this list of conditions and the following disclaimer.
  28:syscalls.c    **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:syscalls.c    **** **      this list of conditions and the following disclaimer in the documentation
  30:syscalls.c    **** **      and/or other materials provided with the distribution.
ARM GAS  /tmp/ccnj5exI.s 			page 2


  31:syscalls.c    **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:syscalls.c    **** **      may be used to endorse or promote products derived from this software
  33:syscalls.c    **** **      without specific prior written permission.
  34:syscalls.c    **** **
  35:syscalls.c    **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:syscalls.c    **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:syscalls.c    **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:syscalls.c    **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:syscalls.c    **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:syscalls.c    **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:syscalls.c    **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:syscalls.c    **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:syscalls.c    **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:syscalls.c    **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:syscalls.c    **** **
  46:syscalls.c    **** *****************************************************************************
  47:syscalls.c    **** */
  48:syscalls.c    **** 
  49:syscalls.c    **** // the code was modified by Fynn Boyer
  50:syscalls.c    **** 
  51:syscalls.c    **** /* Includes */
  52:syscalls.c    **** #include <sys/stat.h>
  53:syscalls.c    **** #include <stdlib.h>
  54:syscalls.c    **** #include <errno.h>
  55:syscalls.c    **** #include <stdio.h>
  56:syscalls.c    **** #include <signal.h>
  57:syscalls.c    **** #include <time.h>
  58:syscalls.c    **** #include <sys/time.h>
  59:syscalls.c    **** #include <sys/times.h>
  60:syscalls.c    **** 
  61:syscalls.c    **** 
  62:syscalls.c    **** /* Variables */
  63:syscalls.c    **** //#undef errno
  64:syscalls.c    **** extern int errno;
  65:syscalls.c    **** extern int __io_putchar(int ch) __attribute__((weak));
  66:syscalls.c    **** extern int __io_getchar(void) __attribute__((weak));
  67:syscalls.c    **** 
  68:syscalls.c    **** register char * stack_ptr asm("sp");
  69:syscalls.c    **** 
  70:syscalls.c    **** char *__env[1] = { 0 };
  71:syscalls.c    **** char **environ = __env;
  72:syscalls.c    **** 
  73:syscalls.c    **** extern char _estack;  // see ld file
  74:syscalls.c    **** extern char _Min_Stack_Size;  // see ld file
  75:syscalls.c    **** 
  76:syscalls.c    **** /* Functions */
  77:syscalls.c    **** void initialise_monitor_handles()
  78:syscalls.c    **** {
  29              		.loc 1 78 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  79:syscalls.c    **** }
  34              		.loc 1 79 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
ARM GAS  /tmp/ccnj5exI.s 			page 3


  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
  40              		.align	1
  41              		.global	_getpid
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	_getpid:
  48              	.LFB26:
  80:syscalls.c    **** 
  81:syscalls.c    **** int _getpid(void)
  82:syscalls.c    **** {
  49              		.loc 1 82 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  83:syscalls.c    ****     return 1;
  54              		.loc 1 83 5 view .LVU3
  84:syscalls.c    **** }
  55              		.loc 1 84 1 is_stmt 0 view .LVU4
  56 0000 0120     		movs	r0, #1
  57 0002 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE26:
  61              		.section	.text._kill,"ax",%progbits
  62              		.align	1
  63              		.global	_kill
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	_kill:
  70              	.LVL0:
  71              	.LFB27:
  85:syscalls.c    **** 
  86:syscalls.c    **** int _kill(int pid, int sig)
  87:syscalls.c    **** {
  72              		.loc 1 87 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 87 1 is_stmt 0 view .LVU6
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  88:syscalls.c    ****     errno = EINVAL;
  82              		.loc 1 88 5 is_stmt 1 view .LVU7
  83 0002 FFF7FEFF 		bl	__errno
  84              	.LVL1:
  85              		.loc 1 88 11 is_stmt 0 view .LVU8
  86 0006 1623     		movs	r3, #22
  87 0008 0360     		str	r3, [r0]
  89:syscalls.c    ****     return -1;
ARM GAS  /tmp/ccnj5exI.s 			page 4


  88              		.loc 1 89 5 is_stmt 1 view .LVU9
  90:syscalls.c    **** }
  89              		.loc 1 90 1 is_stmt 0 view .LVU10
  90 000a 4FF0FF30 		mov	r0, #-1
  91 000e 08BD     		pop	{r3, pc}
  92              		.cfi_endproc
  93              	.LFE27:
  95              		.section	.text._exit,"ax",%progbits
  96              		.align	1
  97              		.global	_exit
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	_exit:
 104              	.LVL2:
 105              	.LFB28:
  91:syscalls.c    **** 
  92:syscalls.c    **** void _exit (int status)
  93:syscalls.c    **** {
 106              		.loc 1 93 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 93 1 is_stmt 0 view .LVU12
 112 0000 08B5     		push	{r3, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 3, -8
 116              		.cfi_offset 14, -4
  94:syscalls.c    ****     _kill(status, -1);
 117              		.loc 1 94 5 is_stmt 1 view .LVU13
 118 0002 4FF0FF31 		mov	r1, #-1
 119 0006 FFF7FEFF 		bl	_kill
 120              	.LVL3:
 121              	.L6:
  95:syscalls.c    ****     while (1) {}        /* Make sure we hang here */
 122              		.loc 1 95 5 discriminator 1 view .LVU14
 123              		.loc 1 95 16 discriminator 1 view .LVU15
 124              		.loc 1 95 11 discriminator 1 view .LVU16
 125 000a FEE7     		b	.L6
 126              		.cfi_endproc
 127              	.LFE28:
 129              		.section	.text._read,"ax",%progbits
 130              		.align	1
 131              		.weak	_read
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_read:
 138              	.LVL4:
 139              	.LFB29:
  96:syscalls.c    **** }
  97:syscalls.c    **** 
  98:syscalls.c    **** __attribute__((weak)) int _read(int file, char *ptr, int len)
ARM GAS  /tmp/ccnj5exI.s 			page 5


  99:syscalls.c    **** {
 140              		.loc 1 99 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 99 1 is_stmt 0 view .LVU18
 145 0000 70B5     		push	{r4, r5, r6, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 16
 148              		.cfi_offset 4, -16
 149              		.cfi_offset 5, -12
 150              		.cfi_offset 6, -8
 151              		.cfi_offset 14, -4
 152 0002 0C46     		mov	r4, r1
 153 0004 1646     		mov	r6, r2
 100:syscalls.c    ****     int DataIdx;
 154              		.loc 1 100 5 is_stmt 1 view .LVU19
 101:syscalls.c    **** 
 102:syscalls.c    ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 155              		.loc 1 102 5 view .LVU20
 156              	.LVL5:
 157              		.loc 1 102 18 is_stmt 0 view .LVU21
 158 0006 0025     		movs	r5, #0
 159              		.loc 1 102 5 view .LVU22
 160 0008 06E0     		b	.L9
 161              	.LVL6:
 162              	.L10:
 103:syscalls.c    ****     {
 104:syscalls.c    ****         *ptr++ = __io_getchar();
 163              		.loc 1 104 9 is_stmt 1 discriminator 3 view .LVU23
 164              		.loc 1 104 18 is_stmt 0 discriminator 3 view .LVU24
 165 000a FFF7FEFF 		bl	__io_getchar
 166              	.LVL7:
 167              		.loc 1 104 13 discriminator 3 view .LVU25
 168 000e 2146     		mov	r1, r4
 169              	.LVL8:
 170              		.loc 1 104 16 discriminator 3 view .LVU26
 171 0010 01F8010B 		strb	r0, [r1], #1
 172              	.LVL9:
 102:syscalls.c    ****     {
 173              		.loc 1 102 38 is_stmt 1 discriminator 3 view .LVU27
 102:syscalls.c    ****     {
 174              		.loc 1 102 45 is_stmt 0 discriminator 3 view .LVU28
 175 0014 0135     		adds	r5, r5, #1
 176              	.LVL10:
 177              		.loc 1 104 13 discriminator 3 view .LVU29
 178 0016 0C46     		mov	r4, r1
 179              	.LVL11:
 180              	.L9:
 102:syscalls.c    ****     {
 181              		.loc 1 102 23 is_stmt 1 discriminator 1 view .LVU30
 102:syscalls.c    ****     {
 182              		.loc 1 102 5 is_stmt 0 discriminator 1 view .LVU31
 183 0018 B542     		cmp	r5, r6
 184 001a F6DB     		blt	.L10
 105:syscalls.c    ****     }
 106:syscalls.c    **** 
ARM GAS  /tmp/ccnj5exI.s 			page 6


 107:syscalls.c    **** return len;
 185              		.loc 1 107 1 is_stmt 1 view .LVU32
 108:syscalls.c    **** }
 186              		.loc 1 108 1 is_stmt 0 view .LVU33
 187 001c 3046     		mov	r0, r6
 188 001e 70BD     		pop	{r4, r5, r6, pc}
 189              		.loc 1 108 1 view .LVU34
 190              		.cfi_endproc
 191              	.LFE29:
 193              		.section	.text._write,"ax",%progbits
 194              		.align	1
 195              		.weak	_write
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	_write:
 202              	.LVL12:
 203              	.LFB30:
 109:syscalls.c    **** 
 110:syscalls.c    **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 111:syscalls.c    **** {
 204              		.loc 1 111 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		.loc 1 111 1 is_stmt 0 view .LVU36
 209 0000 70B5     		push	{r4, r5, r6, lr}
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 16
 212              		.cfi_offset 4, -16
 213              		.cfi_offset 5, -12
 214              		.cfi_offset 6, -8
 215              		.cfi_offset 14, -4
 216 0002 0C46     		mov	r4, r1
 217 0004 1646     		mov	r6, r2
 112:syscalls.c    ****     int DataIdx;
 218              		.loc 1 112 5 is_stmt 1 view .LVU37
 113:syscalls.c    **** 
 114:syscalls.c    ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 219              		.loc 1 114 5 view .LVU38
 220              	.LVL13:
 221              		.loc 1 114 18 is_stmt 0 view .LVU39
 222 0006 0025     		movs	r5, #0
 223              		.loc 1 114 5 view .LVU40
 224 0008 04E0     		b	.L13
 225              	.LVL14:
 226              	.L14:
 115:syscalls.c    ****     {
 116:syscalls.c    ****         __io_putchar(*ptr++);
 227              		.loc 1 116 9 is_stmt 1 discriminator 3 view .LVU41
 228              		.loc 1 116 9 is_stmt 0 discriminator 3 view .LVU42
 229 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 230              	.LVL15:
 231              		.loc 1 116 9 discriminator 3 view .LVU43
 232 000e FFF7FEFF 		bl	__io_putchar
 233              	.LVL16:
ARM GAS  /tmp/ccnj5exI.s 			page 7


 114:syscalls.c    ****     {
 234              		.loc 1 114 38 is_stmt 1 discriminator 3 view .LVU44
 114:syscalls.c    ****     {
 235              		.loc 1 114 45 is_stmt 0 discriminator 3 view .LVU45
 236 0012 0135     		adds	r5, r5, #1
 237              	.LVL17:
 238              	.L13:
 114:syscalls.c    ****     {
 239              		.loc 1 114 23 is_stmt 1 discriminator 1 view .LVU46
 114:syscalls.c    ****     {
 240              		.loc 1 114 5 is_stmt 0 discriminator 1 view .LVU47
 241 0014 B542     		cmp	r5, r6
 242 0016 F8DB     		blt	.L14
 117:syscalls.c    ****     }
 118:syscalls.c    ****     return len;
 243              		.loc 1 118 5 is_stmt 1 view .LVU48
 119:syscalls.c    **** }
 244              		.loc 1 119 1 is_stmt 0 view .LVU49
 245 0018 3046     		mov	r0, r6
 246 001a 70BD     		pop	{r4, r5, r6, pc}
 247              		.loc 1 119 1 view .LVU50
 248              		.cfi_endproc
 249              	.LFE30:
 251              		.section	.text._sbrk,"ax",%progbits
 252              		.align	1
 253              		.global	_sbrk
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	_sbrk:
 260              	.LVL18:
 261              	.LFB31:
 120:syscalls.c    **** 
 121:syscalls.c    **** caddr_t _sbrk(int incr) {
 262              		.loc 1 121 25 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		.loc 1 121 25 is_stmt 0 view .LVU52
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
 272 0002 0346     		mov	r3, r0
 122:syscalls.c    ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 273              		.loc 1 122 5 is_stmt 1 view .LVU53
 123:syscalls.c    ****     static char *heap_end;
 274              		.loc 1 123 5 view .LVU54
 124:syscalls.c    ****     char *prev_heap_end;
 275              		.loc 1 124 5 view .LVU55
 125:syscalls.c    **** 
 126:syscalls.c    ****     if (heap_end == NULL) heap_end = &__heap_start__;
 276              		.loc 1 126 5 view .LVU56
 277              		.loc 1 126 18 is_stmt 0 view .LVU57
 278 0004 0D4A     		ldr	r2, .L23
ARM GAS  /tmp/ccnj5exI.s 			page 8


 279 0006 1268     		ldr	r2, [r2]
 280              		.loc 1 126 8 view .LVU58
 281 0008 5AB1     		cbz	r2, .L21
 282              	.L17:
 127:syscalls.c    **** 
 128:syscalls.c    ****     prev_heap_end = heap_end;
 283              		.loc 1 128 5 is_stmt 1 view .LVU59
 284              		.loc 1 128 19 is_stmt 0 view .LVU60
 285 000a 0C4A     		ldr	r2, .L23
 286 000c 1068     		ldr	r0, [r2]
 287              	.LVL19:
 129:syscalls.c    **** 
 130:syscalls.c    ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 288              		.loc 1 130 5 is_stmt 1 view .LVU61
 289              		.loc 1 130 18 is_stmt 0 view .LVU62
 290 000e 0344     		add	r3, r3, r0
 291              	.LVL20:
 292              		.loc 1 130 36 view .LVU63
 293 0010 0B4A     		ldr	r2, .L23+4
 294 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 295 0014 0B4A     		ldr	r2, .L23+8
 296 0016 521A     		subs	r2, r2, r1
 297              		.loc 1 130 8 view .LVU64
 298 0018 9342     		cmp	r3, r2
 299 001a 06D8     		bhi	.L22
 131:syscalls.c    ****             __asm("BKPT #0\n");
 132:syscalls.c    ****         errno = ENOMEM;
 133:syscalls.c    ****         return (caddr_t)-1;
 134:syscalls.c    **** 
 135:syscalls.c    ****     }
 136:syscalls.c    **** 
 137:syscalls.c    ****     heap_end += incr;
 300              		.loc 1 137 5 is_stmt 1 view .LVU65
 301              		.loc 1 137 14 is_stmt 0 view .LVU66
 302 001c 074A     		ldr	r2, .L23
 303 001e 1360     		str	r3, [r2]
 138:syscalls.c    ****     return (caddr_t)prev_heap_end;
 304              		.loc 1 138 5 is_stmt 1 view .LVU67
 305              	.LVL21:
 306              	.L16:
 139:syscalls.c    **** 
 140:syscalls.c    **** }
 307              		.loc 1 140 1 is_stmt 0 view .LVU68
 308 0020 08BD     		pop	{r3, pc}
 309              	.LVL22:
 310              	.L21:
 126:syscalls.c    **** 
 311              		.loc 1 126 27 is_stmt 1 discriminator 1 view .LVU69
 126:syscalls.c    **** 
 312              		.loc 1 126 36 is_stmt 0 discriminator 1 view .LVU70
 313 0022 064A     		ldr	r2, .L23
 314 0024 0849     		ldr	r1, .L23+12
 315 0026 1160     		str	r1, [r2]
 316 0028 EFE7     		b	.L17
 317              	.LVL23:
 318              	.L22:
 131:syscalls.c    ****         errno = ENOMEM;
ARM GAS  /tmp/ccnj5exI.s 			page 9


 319              		.loc 1 131 13 is_stmt 1 view .LVU71
 320              		.syntax unified
 321              	@ 131 "syscalls.c" 1
 322 002a 00BE     		BKPT #0
 323              	
 324              	@ 0 "" 2
 132:syscalls.c    ****         return (caddr_t)-1;
 325              		.loc 1 132 9 view .LVU72
 326              		.thumb
 327              		.syntax unified
 328 002c FFF7FEFF 		bl	__errno
 329              	.LVL24:
 132:syscalls.c    ****         return (caddr_t)-1;
 330              		.loc 1 132 15 is_stmt 0 view .LVU73
 331 0030 0C23     		movs	r3, #12
 332 0032 0360     		str	r3, [r0]
 133:syscalls.c    **** 
 333              		.loc 1 133 9 is_stmt 1 view .LVU74
 133:syscalls.c    **** 
 334              		.loc 1 133 16 is_stmt 0 view .LVU75
 335 0034 4FF0FF30 		mov	r0, #-1
 336 0038 F2E7     		b	.L16
 337              	.L24:
 338 003a 00BF     		.align	2
 339              	.L23:
 340 003c 00000000 		.word	.LANCHOR0
 341 0040 00000000 		.word	_Min_Stack_Size
 342 0044 00000000 		.word	_estack
 343 0048 00000000 		.word	end
 344              		.cfi_endproc
 345              	.LFE31:
 347              		.section	.text._close,"ax",%progbits
 348              		.align	1
 349              		.global	_close
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu fpv4-sp-d16
 355              	_close:
 356              	.LVL25:
 357              	.LFB32:
 141:syscalls.c    **** 
 142:syscalls.c    **** int _close(int file)
 143:syscalls.c    **** {
 358              		.loc 1 143 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 144:syscalls.c    ****     return -1;
 363              		.loc 1 144 5 view .LVU77
 145:syscalls.c    **** }
 364              		.loc 1 145 1 is_stmt 0 view .LVU78
 365 0000 4FF0FF30 		mov	r0, #-1
 366              	.LVL26:
 367              		.loc 1 145 1 view .LVU79
 368 0004 7047     		bx	lr
ARM GAS  /tmp/ccnj5exI.s 			page 10


 369              		.cfi_endproc
 370              	.LFE32:
 372              		.section	.text._fstat,"ax",%progbits
 373              		.align	1
 374              		.global	_fstat
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	_fstat:
 381              	.LVL27:
 382              	.LFB33:
 146:syscalls.c    **** 
 147:syscalls.c    **** 
 148:syscalls.c    **** int _fstat(int file, struct stat *st)
 149:syscalls.c    **** {
 383              		.loc 1 149 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 150:syscalls.c    ****     st->st_mode = S_IFCHR;
 388              		.loc 1 150 5 view .LVU81
 389              		.loc 1 150 17 is_stmt 0 view .LVU82
 390 0000 4FF40053 		mov	r3, #8192
 391 0004 4B60     		str	r3, [r1, #4]
 151:syscalls.c    ****     return 0;
 392              		.loc 1 151 5 is_stmt 1 view .LVU83
 152:syscalls.c    **** }
 393              		.loc 1 152 1 is_stmt 0 view .LVU84
 394 0006 0020     		movs	r0, #0
 395              	.LVL28:
 396              		.loc 1 152 1 view .LVU85
 397 0008 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE33:
 401              		.section	.text._isatty,"ax",%progbits
 402              		.align	1
 403              		.global	_isatty
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	_isatty:
 410              	.LVL29:
 411              	.LFB34:
 153:syscalls.c    **** 
 154:syscalls.c    **** int _isatty(int file)
 155:syscalls.c    **** {
 412              		.loc 1 155 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 156:syscalls.c    ****     return 1;
 417              		.loc 1 156 5 view .LVU87
 157:syscalls.c    **** }
ARM GAS  /tmp/ccnj5exI.s 			page 11


 418              		.loc 1 157 1 is_stmt 0 view .LVU88
 419 0000 0120     		movs	r0, #1
 420              	.LVL30:
 421              		.loc 1 157 1 view .LVU89
 422 0002 7047     		bx	lr
 423              		.cfi_endproc
 424              	.LFE34:
 426              		.section	.text._lseek,"ax",%progbits
 427              		.align	1
 428              		.global	_lseek
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	_lseek:
 435              	.LVL31:
 436              	.LFB35:
 158:syscalls.c    **** 
 159:syscalls.c    **** int _lseek(int file, int ptr, int dir)
 160:syscalls.c    **** {
 437              		.loc 1 160 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 161:syscalls.c    ****     return 0;
 442              		.loc 1 161 5 view .LVU91
 162:syscalls.c    **** }
 443              		.loc 1 162 1 is_stmt 0 view .LVU92
 444 0000 0020     		movs	r0, #0
 445              	.LVL32:
 446              		.loc 1 162 1 view .LVU93
 447 0002 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE35:
 451              		.section	.text._open,"ax",%progbits
 452              		.align	1
 453              		.global	_open
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 457              		.fpu fpv4-sp-d16
 459              	_open:
 460              	.LVL33:
 461              	.LFB36:
 163:syscalls.c    **** 
 164:syscalls.c    **** int _open(char *path, int flags, ...)
 165:syscalls.c    **** {
 462              		.loc 1 165 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 4, pretend = 12, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 1
 466              		@ link register save eliminated.
 467              		.loc 1 165 1 is_stmt 0 view .LVU95
 468 0000 0EB4     		push	{r1, r2, r3}
 469              	.LCFI5:
 470              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccnj5exI.s 			page 12


 471              		.cfi_offset 1, -12
 472              		.cfi_offset 2, -8
 473              		.cfi_offset 3, -4
 166:syscalls.c    ****     /* Pretend like we always fail */
 167:syscalls.c    ****     return -1;
 474              		.loc 1 167 5 is_stmt 1 view .LVU96
 168:syscalls.c    **** }
 475              		.loc 1 168 1 is_stmt 0 view .LVU97
 476 0002 4FF0FF30 		mov	r0, #-1
 477              	.LVL34:
 478              		.loc 1 168 1 view .LVU98
 479 0006 03B0     		add	sp, sp, #12
 480              	.LCFI6:
 481              		.cfi_restore 3
 482              		.cfi_restore 2
 483              		.cfi_restore 1
 484              		.cfi_def_cfa_offset 0
 485 0008 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE36:
 489              		.section	.text._wait,"ax",%progbits
 490              		.align	1
 491              		.global	_wait
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv4-sp-d16
 497              	_wait:
 498              	.LVL35:
 499              	.LFB37:
 169:syscalls.c    **** 
 170:syscalls.c    **** int _wait(int *status)
 171:syscalls.c    **** {
 500              		.loc 1 171 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		.loc 1 171 1 is_stmt 0 view .LVU100
 505 0000 08B5     		push	{r3, lr}
 506              	.LCFI7:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
 172:syscalls.c    ****     errno = ECHILD;
 510              		.loc 1 172 5 is_stmt 1 view .LVU101
 511 0002 FFF7FEFF 		bl	__errno
 512              	.LVL36:
 513              		.loc 1 172 11 is_stmt 0 view .LVU102
 514 0006 0A23     		movs	r3, #10
 515 0008 0360     		str	r3, [r0]
 173:syscalls.c    ****     return -1;
 516              		.loc 1 173 5 is_stmt 1 view .LVU103
 174:syscalls.c    **** }
 517              		.loc 1 174 1 is_stmt 0 view .LVU104
 518 000a 4FF0FF30 		mov	r0, #-1
 519 000e 08BD     		pop	{r3, pc}
 520              		.cfi_endproc
ARM GAS  /tmp/ccnj5exI.s 			page 13


 521              	.LFE37:
 523              		.section	.text._unlink,"ax",%progbits
 524              		.align	1
 525              		.global	_unlink
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	_unlink:
 532              	.LVL37:
 533              	.LFB38:
 175:syscalls.c    **** 
 176:syscalls.c    **** int _unlink(char *name)
 177:syscalls.c    **** {
 534              		.loc 1 177 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		.loc 1 177 1 is_stmt 0 view .LVU106
 539 0000 08B5     		push	{r3, lr}
 540              	.LCFI8:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 178:syscalls.c    ****     errno = ENOENT;
 544              		.loc 1 178 5 is_stmt 1 view .LVU107
 545 0002 FFF7FEFF 		bl	__errno
 546              	.LVL38:
 547              		.loc 1 178 11 is_stmt 0 view .LVU108
 548 0006 0223     		movs	r3, #2
 549 0008 0360     		str	r3, [r0]
 179:syscalls.c    ****     return -1;
 550              		.loc 1 179 5 is_stmt 1 view .LVU109
 180:syscalls.c    **** }
 551              		.loc 1 180 1 is_stmt 0 view .LVU110
 552 000a 4FF0FF30 		mov	r0, #-1
 553 000e 08BD     		pop	{r3, pc}
 554              		.cfi_endproc
 555              	.LFE38:
 557              		.section	.text._times,"ax",%progbits
 558              		.align	1
 559              		.global	_times
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv4-sp-d16
 565              	_times:
 566              	.LVL39:
 567              	.LFB39:
 181:syscalls.c    **** 
 182:syscalls.c    **** int _times(struct tms *buf)
 183:syscalls.c    **** {
 568              		.loc 1 183 1 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		@ link register save eliminated.
ARM GAS  /tmp/ccnj5exI.s 			page 14


 184:syscalls.c    ****     return -1;
 573              		.loc 1 184 5 view .LVU112
 185:syscalls.c    **** }
 574              		.loc 1 185 1 is_stmt 0 view .LVU113
 575 0000 4FF0FF30 		mov	r0, #-1
 576              	.LVL40:
 577              		.loc 1 185 1 view .LVU114
 578 0004 7047     		bx	lr
 579              		.cfi_endproc
 580              	.LFE39:
 582              		.section	.text._stat,"ax",%progbits
 583              		.align	1
 584              		.global	_stat
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	_stat:
 591              	.LVL41:
 592              	.LFB40:
 186:syscalls.c    **** 
 187:syscalls.c    **** int _stat(char *file, struct stat *st)
 188:syscalls.c    **** {
 593              		.loc 1 188 1 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 189:syscalls.c    ****     st->st_mode = S_IFCHR;
 598              		.loc 1 189 5 view .LVU116
 599              		.loc 1 189 17 is_stmt 0 view .LVU117
 600 0000 4FF40053 		mov	r3, #8192
 601 0004 4B60     		str	r3, [r1, #4]
 190:syscalls.c    ****     return 0;
 602              		.loc 1 190 5 is_stmt 1 view .LVU118
 191:syscalls.c    **** }
 603              		.loc 1 191 1 is_stmt 0 view .LVU119
 604 0006 0020     		movs	r0, #0
 605              	.LVL42:
 606              		.loc 1 191 1 view .LVU120
 607 0008 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE40:
 611              		.section	.text._link,"ax",%progbits
 612              		.align	1
 613              		.global	_link
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu fpv4-sp-d16
 619              	_link:
 620              	.LVL43:
 621              	.LFB41:
 192:syscalls.c    **** 
 193:syscalls.c    **** int _link(char *old, char *new)
 194:syscalls.c    **** {
 622              		.loc 1 194 1 is_stmt 1 view -0
ARM GAS  /tmp/ccnj5exI.s 			page 15


 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		.loc 1 194 1 is_stmt 0 view .LVU122
 627 0000 08B5     		push	{r3, lr}
 628              	.LCFI9:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 3, -8
 631              		.cfi_offset 14, -4
 195:syscalls.c    ****     errno = EMLINK;
 632              		.loc 1 195 5 is_stmt 1 view .LVU123
 633 0002 FFF7FEFF 		bl	__errno
 634              	.LVL44:
 635              		.loc 1 195 11 is_stmt 0 view .LVU124
 636 0006 1F23     		movs	r3, #31
 637 0008 0360     		str	r3, [r0]
 196:syscalls.c    ****     return -1;
 638              		.loc 1 196 5 is_stmt 1 view .LVU125
 197:syscalls.c    **** }
 639              		.loc 1 197 1 is_stmt 0 view .LVU126
 640 000a 4FF0FF30 		mov	r0, #-1
 641 000e 08BD     		pop	{r3, pc}
 642              		.cfi_endproc
 643              	.LFE41:
 645              		.section	.text._fork,"ax",%progbits
 646              		.align	1
 647              		.global	_fork
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	_fork:
 654              	.LFB42:
 198:syscalls.c    **** 
 199:syscalls.c    **** int _fork(void)
 200:syscalls.c    **** {
 655              		.loc 1 200 1 is_stmt 1 view -0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659 0000 08B5     		push	{r3, lr}
 660              	.LCFI10:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 3, -8
 663              		.cfi_offset 14, -4
 201:syscalls.c    ****     errno = EAGAIN;
 664              		.loc 1 201 5 view .LVU128
 665 0002 FFF7FEFF 		bl	__errno
 666              	.LVL45:
 667              		.loc 1 201 11 is_stmt 0 view .LVU129
 668 0006 0B23     		movs	r3, #11
 669 0008 0360     		str	r3, [r0]
 202:syscalls.c    ****     return -1;
 670              		.loc 1 202 5 is_stmt 1 view .LVU130
 203:syscalls.c    **** }
 671              		.loc 1 203 1 is_stmt 0 view .LVU131
 672 000a 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccnj5exI.s 			page 16


 673 000e 08BD     		pop	{r3, pc}
 674              		.cfi_endproc
 675              	.LFE42:
 677              		.section	.text._execve,"ax",%progbits
 678              		.align	1
 679              		.global	_execve
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv4-sp-d16
 685              	_execve:
 686              	.LVL46:
 687              	.LFB43:
 204:syscalls.c    **** 
 205:syscalls.c    **** int _execve(char *name, char **argv, char **env)
 206:syscalls.c    **** {
 688              		.loc 1 206 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		.loc 1 206 1 is_stmt 0 view .LVU133
 693 0000 08B5     		push	{r3, lr}
 694              	.LCFI11:
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 3, -8
 697              		.cfi_offset 14, -4
 207:syscalls.c    ****     errno = ENOMEM;
 698              		.loc 1 207 5 is_stmt 1 view .LVU134
 699 0002 FFF7FEFF 		bl	__errno
 700              	.LVL47:
 701              		.loc 1 207 11 is_stmt 0 view .LVU135
 702 0006 0C23     		movs	r3, #12
 703 0008 0360     		str	r3, [r0]
 208:syscalls.c    ****     return -1;
 704              		.loc 1 208 5 is_stmt 1 view .LVU136
 209:syscalls.c    **** }
 705              		.loc 1 209 1 is_stmt 0 view .LVU137
 706 000a 4FF0FF30 		mov	r0, #-1
 707 000e 08BD     		pop	{r3, pc}
 708              		.cfi_endproc
 709              	.LFE43:
 711              		.global	environ
 712              		.global	__env
 713              		.section	.bss.__env,"aw",%nobits
 714              		.align	2
 717              	__env:
 718 0000 00000000 		.space	4
 719              		.section	.bss.heap_end.0,"aw",%nobits
 720              		.align	2
 721              		.set	.LANCHOR0,. + 0
 724              	heap_end.0:
 725 0000 00000000 		.space	4
 726              		.section	.data.environ,"aw"
 727              		.align	2
 730              	environ:
 731 0000 00000000 		.word	__env
 732              		.weak	__io_putchar
ARM GAS  /tmp/ccnj5exI.s 			page 17


 733              		.weak	__io_getchar
 734              		.text
 735              	.Letext0:
 736              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 737              		.file 3 "/usr/include/newlib/sys/_types.h"
 738              		.file 4 "/usr/include/newlib/sys/_timeval.h"
 739              		.file 5 "/usr/include/newlib/sys/_timespec.h"
 740              		.file 6 "/usr/include/newlib/sys/types.h"
 741              		.file 7 "/usr/include/newlib/sys/stat.h"
 742              		.file 8 "/usr/include/newlib/sys/times.h"
 743              		.file 9 "/usr/include/newlib/sys/errno.h"
ARM GAS  /tmp/ccnj5exI.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccnj5exI.s:18     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccnj5exI.s:26     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccnj5exI.s:40     .text._getpid:0000000000000000 $t
     /tmp/ccnj5exI.s:47     .text._getpid:0000000000000000 _getpid
     /tmp/ccnj5exI.s:62     .text._kill:0000000000000000 $t
     /tmp/ccnj5exI.s:69     .text._kill:0000000000000000 _kill
     /tmp/ccnj5exI.s:96     .text._exit:0000000000000000 $t
     /tmp/ccnj5exI.s:103    .text._exit:0000000000000000 _exit
     /tmp/ccnj5exI.s:130    .text._read:0000000000000000 $t
     /tmp/ccnj5exI.s:137    .text._read:0000000000000000 _read
     /tmp/ccnj5exI.s:194    .text._write:0000000000000000 $t
     /tmp/ccnj5exI.s:201    .text._write:0000000000000000 _write
     /tmp/ccnj5exI.s:252    .text._sbrk:0000000000000000 $t
     /tmp/ccnj5exI.s:259    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccnj5exI.s:340    .text._sbrk:000000000000003c $d
     /tmp/ccnj5exI.s:348    .text._close:0000000000000000 $t
     /tmp/ccnj5exI.s:355    .text._close:0000000000000000 _close
     /tmp/ccnj5exI.s:373    .text._fstat:0000000000000000 $t
     /tmp/ccnj5exI.s:380    .text._fstat:0000000000000000 _fstat
     /tmp/ccnj5exI.s:402    .text._isatty:0000000000000000 $t
     /tmp/ccnj5exI.s:409    .text._isatty:0000000000000000 _isatty
     /tmp/ccnj5exI.s:427    .text._lseek:0000000000000000 $t
     /tmp/ccnj5exI.s:434    .text._lseek:0000000000000000 _lseek
     /tmp/ccnj5exI.s:452    .text._open:0000000000000000 $t
     /tmp/ccnj5exI.s:459    .text._open:0000000000000000 _open
     /tmp/ccnj5exI.s:490    .text._wait:0000000000000000 $t
     /tmp/ccnj5exI.s:497    .text._wait:0000000000000000 _wait
     /tmp/ccnj5exI.s:524    .text._unlink:0000000000000000 $t
     /tmp/ccnj5exI.s:531    .text._unlink:0000000000000000 _unlink
     /tmp/ccnj5exI.s:558    .text._times:0000000000000000 $t
     /tmp/ccnj5exI.s:565    .text._times:0000000000000000 _times
     /tmp/ccnj5exI.s:583    .text._stat:0000000000000000 $t
     /tmp/ccnj5exI.s:590    .text._stat:0000000000000000 _stat
     /tmp/ccnj5exI.s:612    .text._link:0000000000000000 $t
     /tmp/ccnj5exI.s:619    .text._link:0000000000000000 _link
     /tmp/ccnj5exI.s:646    .text._fork:0000000000000000 $t
     /tmp/ccnj5exI.s:653    .text._fork:0000000000000000 _fork
     /tmp/ccnj5exI.s:678    .text._execve:0000000000000000 $t
     /tmp/ccnj5exI.s:685    .text._execve:0000000000000000 _execve
     /tmp/ccnj5exI.s:730    .data.environ:0000000000000000 environ
     /tmp/ccnj5exI.s:717    .bss.__env:0000000000000000 __env
     /tmp/ccnj5exI.s:714    .bss.__env:0000000000000000 $d
     /tmp/ccnj5exI.s:720    .bss.heap_end.0:0000000000000000 $d
     /tmp/ccnj5exI.s:724    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/ccnj5exI.s:727    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
